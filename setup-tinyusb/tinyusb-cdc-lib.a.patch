diff --git a/examples/device/cdc_XIAO_donor/Makefile b/examples/device/cdc_XIAO_donor/Makefile
new file mode 100644
index 000000000..bafdd1e22
--- /dev/null
+++ b/examples/device/cdc_XIAO_donor/Makefile
@@ -0,0 +1,335 @@
+#see https://community.arm.com/support-forums/f/compilers-and-libraries-forum/11488/arm-none-eabi-ar-src-n1_main-o-plugin-needed-to-handle-lto-object
+#for idea to try next if want to get a tinyusb-cdc-lib.a going
+
+
+BOARD = xiao_nrf52840
+
+include ../../../tools/top.mk
+include ../../make.mk
+
+INC += \
+  src \
+  $(TOP)/hw \
+
+# Example source
+EXAMPLE_SOURCE += $(wildcard src/*.c)
+SRC_C += $(addprefix $(CURRENT_PATH)/, $(EXAMPLE_SOURCE))
+
+include ../../rules.mk
+
+broom:
+	rm -rf /home/nick/work/xiao/baremetal/tinyusb/examples/device/cdc_XIAO_donor/_build/xiao_nrf52840
+
+#	-DCFG_TUSB_OS=OPT_OS_CUSTOM \ 
+
+EARLIERLIBCFLAGS = \
+	-DCFG_TUSB_OS=OPT_OS_NONE \
+	-DBOARD=xiao_nrf52840 -DNRF52840_XXAA \
+	-flto -ffat-lto-objects -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET \
+	-Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing \
+	-Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings \
+	-Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 \
+	-I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf \
+	-Isrc \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw \
+	-I/home/nick/work/xiao/baremetal/tinyusb/src 
+
+RELINCPATH = ../../../../tinyusb
+
+LIBCFLAGS = \
+	-DCFG_TUSB_OS=OPT_OS_NONE \
+	-DBOARD=xiao_nrf52840 -DNRF52840_XXAA \
+	-flto -ffat-lto-objects -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET \
+	-Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing \
+	-Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings \
+	-Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os \
+	-I$(RELINCPATH)/hw/bsp/nrf/boards/xiao_nrf52840 \
+	-I$(RELINCPATH)/lib/CMSIS_5/CMSIS/Core/Include \
+	-I$(RELINCPATH)/hw/mcu/nordic \
+	-I$(RELINCPATH)/hw/mcu/nordic/nrfx \
+	-I$(RELINCPATH)/hw/mcu/nordic/nrfx/mdk \
+	-I$(RELINCPATH)/hw/mcu/nordic/nrfx/hal \
+	-I$(RELINCPATH)/hw/mcu/nordic/nrfx/drivers/include \
+	-I$(RELINCPATH)/hw/mcu/nordic/nrfx/drivers/src \
+	-I$(RELINCPATH)/hw/bsp/nrf \
+	-Isrc \
+	-I$(RELINCPATH)/hw \
+	-I$(RELINCPATH)/src 
+
+LIBMICROBIANLDFLAGS = -L/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -DNRF52840_XXAA -flto --use-linker-plugin -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET -Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing -Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings -Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 -I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf -Isrc -I/home/nick/work/xiao/baremetal/tinyusb/hw -I/home/nick/work/xiao/baremetal/tinyusb/src \
+	-Wl,-T,/home/nick/work/xiao/baremetal/tinyusb/examples/device/cdc_XIAO_donor/microbian-XIAO-tinyusb-nrf52840_s140_v7.ld -Wl,-Map=.map -Wl,-cref -Wl,-gc-sections -specs=nosys.specs -specs=nano.specs
+
+
+
+
+
+
+
+
+
+CFLAGS = -DBOARD=xiao_nrf52840 -DNRF52840_XXAA -flto -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET \
+	-Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing \
+	-Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings \
+	-Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 \
+	-I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf \
+	-Isrc \
+	-I/home/nick/work/xiao/baremetal/tinyusb/hw \
+	-I/home/nick/work/xiao/baremetal/tinyusb/src 
+
+
+
+LDFLAGS = -L/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -DNRF52840_XXAA -flto -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET -Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing -Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings -Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 -I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf -Isrc -I/home/nick/work/xiao/baremetal/tinyusb/hw -I/home/nick/work/xiao/baremetal/tinyusb/src -Wl,-T,/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld -Wl,-Map=.map -Wl,-cref -Wl,-gc-sections -specs=nosys.specs -specs=nano.specs
+
+MICROBIANLDFLAGS = -L/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -DNRF52840_XXAA -flto -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET -Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing -Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings -Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 -I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf -Isrc -I/home/nick/work/xiao/baremetal/tinyusb/hw -I/home/nick/work/xiao/baremetal/tinyusb/src \
+	-Wl,-T,/home/nick/work/xiao/baremetal/tinyusb/examples/device/cdc_XIAO_donor/microbian-XIAO-tinyusb-nrf52840_s140_v7.ld -Wl,-Map=.map -Wl,-cref -Wl,-gc-sections -specs=nosys.specs -specs=nano.specs
+
+FULL_OBJECTS = \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o \
+	_build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o \
+	_build/xiao_nrf52840/obj/hw/bsp/nrf/family.o \
+	_build/xiao_nrf52840/obj/hw/bsp/board.o \
+	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o \
+	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o \
+	_build/xiao_nrf52840/obj/src/tusb.o \
+	_build/xiao_nrf52840/obj/src/common/tusb_fifo.o \
+	_build/xiao_nrf52840/obj/src/device/usbd.o \
+	_build/xiao_nrf52840/obj/src/device/usbd_control.o \
+	_build/xiao_nrf52840/obj/src/class/audio/audio_device.o \
+	_build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o \
+	_build/xiao_nrf52840/obj/src/class/dfu/dfu_device.o \
+	_build/xiao_nrf52840/obj/src/class/dfu/dfu_rt_device.o \
+	_build/xiao_nrf52840/obj/src/class/hid/hid_device.o \
+	_build/xiao_nrf52840/obj/src/class/midi/midi_device.o \
+	_build/xiao_nrf52840/obj/src/class/msc/msc_device.o \
+	_build/xiao_nrf52840/obj/src/class/net/ecm_rndis_device.o \
+	_build/xiao_nrf52840/obj/src/class/net/ncm_device.o \
+	_build/xiao_nrf52840/obj/src/class/usbtmc/usbtmc_device.o \
+	_build/xiao_nrf52840/obj/src/class/video/video_device.o \
+	_build/xiao_nrf52840/obj/src/class/vendor/vendor_device.o 
+                                                                  
+OBJECTS = \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o \
+	_build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o \
+	_build/xiao_nrf52840/obj/hw/bsp/nrf/family.o \
+	_build/xiao_nrf52840/obj/hw/bsp/board.o \
+	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o \
+	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o \
+	_build/xiao_nrf52840/obj/src/tusb.o \
+	_build/xiao_nrf52840/obj/src/common/tusb_fifo.o \
+	_build/xiao_nrf52840/obj/src/device/usbd.o \
+	_build/xiao_nrf52840/obj/src/device/usbd_control.o \
+	_build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o \
+
+
+#exclude these for tinyusb-cdc-lib.a
+EXCLUDED_START = _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o 
+EXCLUDED_MAIN =	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o 
+
+
+OBJ = \
+	_build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o \
+	_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o \
+	_build/xiao_nrf52840/obj/hw/bsp/nrf/family.o \
+	_build/xiao_nrf52840/obj/hw/bsp/board.o \
+	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o \
+	_build/xiao_nrf52840/obj/src/tusb.o \
+	_build/xiao_nrf52840/obj/src/common/tusb_fifo.o \
+	_build/xiao_nrf52840/obj/src/device/usbd.o \
+	_build/xiao_nrf52840/obj/src/device/usbd_control.o \
+	_build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o 
+
+#	_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/stub.o 
+
+#not testing AS yet
+#        /hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o
+
+maketree:
+	mkdir -p ./_build
+	mkdir ./_build/xiao_nrf52840
+	mkdir ./_build/xiao_nrf52840/obj
+	mkdir ./_build/xiao_nrf52840/obj/examples
+	mkdir ./_build/xiao_nrf52840/obj/examples/device
+	mkdir ./_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor
+	mkdir ./_build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src
+	mkdir ./_build/xiao_nrf52840/obj/hw
+	mkdir ./_build/xiao_nrf52840/obj/hw/bsp
+	mkdir ./_build/xiao_nrf52840/obj/hw/bsp/nrf
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu/nordic
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src
+	mkdir ./_build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk
+	mkdir ./_build/xiao_nrf52840/obj/src
+	mkdir ./_build/xiao_nrf52840/obj/src/class
+	mkdir ./_build/xiao_nrf52840/obj/src/class/audio
+	mkdir ./_build/xiao_nrf52840/obj/src/class/cdc
+	mkdir ./_build/xiao_nrf52840/obj/src/class/dfu
+	mkdir ./_build/xiao_nrf52840/obj/src/class/hid
+	mkdir ./_build/xiao_nrf52840/obj/src/class/midi
+	mkdir ./_build/xiao_nrf52840/obj/src/class/msc
+	mkdir ./_build/xiao_nrf52840/obj/src/class/net
+	mkdir ./_build/xiao_nrf52840/obj/src/class/usbtmc
+	mkdir ./_build/xiao_nrf52840/obj/src/class/vendor
+	mkdir ./_build/xiao_nrf52840/obj/src/class/video
+	mkdir ./_build/xiao_nrf52840/obj/src/common
+	mkdir ./_build/xiao_nrf52840/obj/src/device
+	mkdir ./_build/xiao_nrf52840/obj/src/portable
+	mkdir ./_build/xiao_nrf52840/obj/src/portable/nordic
+	mkdir ./_build/xiao_nrf52840/obj/src/portable/nordic/nrf5x
+
+fixup: clean all
+	cp _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o _build
+
+testcompilewithlib: fixup broom maketree
+	cp  _build/gcc_startup_nrf52840_asm.o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o $(LIBCFLAGS) ../../../src/portable/nordic/nrf5x/dcd_nrf5x.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_power.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/mdk/system_nrf52840.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/nrf/family.o $(LIBCFLAGS) ../../../hw/bsp/nrf/family.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/board.o $(LIBCFLAGS) ../../../hw/bsp/board.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/tusb.o $(LIBCFLAGS) ../../../src/tusb.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/common/tusb_fifo.o $(LIBCFLAGS) ../../../src/common/tusb_fifo.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd.o $(LIBCFLAGS) ../../../src/device/usbd.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd_control.o $(LIBCFLAGS) ../../../src/device/usbd_control.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o $(LIBCFLAGS) ../../../src/class/cdc/cdc_device.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o $(LIBCFLAGS) ./src/usb_descriptors.c
+	#$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/stub.o $(CFLAGS) ./src/stub.c
+	#make an archive here
+	arm-none-eabi-ar cr tinyusb-cdc-lib.a $(OBJ)
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o $(LIBCFLAGS) ./src/main.c
+	#link with archive
+	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+	$(LIBMICROBIANLDFLAGS) \
+        $(EXCLUDED_START) $(EXCLUDED_MAIN) tinyusb-cdc-lib.a \
+	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+	arm-none-eabi-objdump -d _build/xiao_nrf52840/cdc_XIAO_donor.elf > disassembly.txt
+
+
+testcompile: fixup broom maketree
+	cp  _build/gcc_startup_nrf52840_asm.o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840_asm.o
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o $(CFLAGS) ../../../src/portable/nordic/nrf5x/dcd_nrf5x.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o $(CFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_power.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o $(CFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o $(CFLAGS) ../../../hw/mcu/nordic/nrfx/mdk/system_nrf52840.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/nrf/family.o $(CFLAGS) ../../../hw/bsp/nrf/family.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/board.o $(CFLAGS) ../../../hw/bsp/board.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/tusb.o $(CFLAGS) ../../../src/tusb.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/common/tusb_fifo.o $(CFLAGS) ../../../src/common/tusb_fifo.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd.o $(CFLAGS) ../../../src/device/usbd.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd_control.o $(CFLAGS) ../../../src/device/usbd_control.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o $(CFLAGS) ../../../src/class/cdc/cdc_device.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o $(CFLAGS) ./src/usb_descriptors.c
+	#$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/stub.o $(CFLAGS) ./src/stub.c
+	#make an archive here
+	#arm-none-eabi-ar cr tinyusb-cdc-lib.a $(OBJ)
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o $(CFLAGS) ./src/main.c
+	#link with archive
+	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+	$(MICROBIANLDFLAGS) \
+        $(EXCLUDED_START) $(EXCLUDED_MAIN) tinyusb-cdc-lib.a \
+	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+	arm-none-eabi-objdump -d _build/xiao_nrf52840/cdc_XIAO_donor.elf > disassembly.txt
+	
+#will need to modify board init for microbian
+
+ 
+
+#	-L/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -DNRF52840_XXAA -flto -mthumb -mabi=aapcs -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -DCFG_TUSB_MCU=OPT_MCU_NRF5X -DCONFIG_GPIO_AS_PINRESET -Wno-error=undef -Wno-error=unused-parameter -Wno-error=cast-align -Wno-error=cast-qual -ggdb -fdata-sections -ffunction-sections -fsingle-precision-constant -fno-strict-aliasing -Wall -Wextra -Werror -Wfatal-errors -Wdouble-promotion -Wstrict-prototypes -Wstrict-overflow -Werror-implicit-function-declaration -Wfloat-equal -Wundef -Wshadow -Wwrite-strings -Wsign-compare -Wmissing-format-attribute -Wunreachable-code -Wcast-align -Wcast-function-type -Wcast-qual -Wnull-dereference -Wuninitialized -Wunused -Wredundant-decls -Os -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840 -I/home/nick/work/xiao/baremetal/tinyusb/lib/CMSIS_5/CMSIS/Core/Include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/mdk -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/hal -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/include -I/home/nick/work/xiao/baremetal/tinyusb/hw/mcu/nordic/nrfx/drivers/src -I/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf -Isrc -I/home/nick/work/xiao/baremetal/tinyusb/hw -I/home/nick/work/xiao/baremetal/tinyusb/src -Wl,-T,/home/nick/work/xiao/baremetal/tinyusb/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld -Wl,-Map=.map -Wl,-cref -Wl,-gc-sections -specs=nosys.specs -specs=nano.specs \
+
+testlink:
+	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+	$(LDFLAGS) \
+        $(OBJECTS) \
+	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+
+testmicrobianlink:
+	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+	$(MICROBIANLDFLAGS) \
+        $(OBJECTS) \
+	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+	arm-none-eabi-objdump -d _build/xiao_nrf52840/cdc_XIAO_donor.elf > disassembly.txt
+
+testmicrobianlinklib:
+	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+	$(MICROBIANLDFLAGS) \
+        $(EXCLUDED_START) ./tinyusb-cdc-lib.a $(EXCLUDED_MAIN) \
+	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+	arm-none-eabi-objdump -d _build/xiao_nrf52840/cdc_XIAO_donor.elf > disassembly.txt
+
+uploadprep:
+	arm-none-eabi-objcopy -O ihex _build/xiao_nrf52840/cdc_XIAO_donor.elf _build/xiao_nrf52840/cdc_XIAO_donor.hex
+	adafruit-nrfutil dfu genpkg --dev-type 0x0052 --application _build/xiao_nrf52840/cdc_XIAO_donor.hex _build/xiao_nrf52840/cdc_XIAO_donor.zip
+
+upload:
+	adafruit-nrfutil --verbose dfu serial --package _build/xiao_nrf52840/cdc_XIAO_donor.zip -p /dev/ttyACM0 -b 115200 --singlebank
+
+#HACKING family.c
+#board_init family.o ../../../hw/bsp/nrf/family.c
+#has USBD_IRQHandler(void)
+#has instance of nrfx_uarte_t
+#has board_init() 
+#simplest to keep hw serial to start with
+#just move uart instance to 1 rather than 0
+#reassign rx and tx to out of the way 
+#provide usb_init in place of board_init
+#can loose led,button,systick, probably an IRQ for SERIAL1 to find
+#will NVIC priority of 2 for USBD be OK?
+#also keep in mind priority 0,1,4 reserved for SoftDevice
+
+#TRANSPLANTING from ../../../hw/mcu/nordic/nrfx/mdk/gcc_startup_nrf52840.S 
+#    .long   USBD_IRQHandler
+#    .long   UARTE1_IRQHandler temporary before simplifying further
+#put into ISR vector table for microbian
+#HEAP maybe a problem elsewhere if compiling other examples but heap seems to be of zero size
+#need to have a reminder of how context areas are allocated would probably clash with heap
+
+tinyusb-cdc-lib: clean maketree
+	rm -f ./tinyusb-cdc-lib.a
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/portable/nordic/nrf5x/dcd_nrf5x.o $(LIBCFLAGS) ../../../src/portable/nordic/nrf5x/dcd_nrf5x.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_power.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_power.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/drivers/src/nrfx_uarte.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/mcu/nordic/nrfx/mdk/system_nrf52840.o $(LIBCFLAGS) ../../../hw/mcu/nordic/nrfx/mdk/system_nrf52840.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/nrf/family.o $(LIBCFLAGS) ../../../hw/bsp/nrf/family.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/hw/bsp/board.o $(LIBCFLAGS) ../../../hw/bsp/board.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/tusb.o $(LIBCFLAGS) ../../../src/tusb.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/common/tusb_fifo.o $(LIBCFLAGS) ../../../src/common/tusb_fifo.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd.o $(LIBCFLAGS) ../../../src/device/usbd.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/device/usbd_control.o $(LIBCFLAGS) ../../../src/device/usbd_control.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/src/class/cdc/cdc_device.o $(LIBCFLAGS) ../../../src/class/cdc/cdc_device.c
+	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/usb_descriptors.o $(LIBCFLAGS) ./src/usb_descriptors.c
+	echo "make archive"
+	arm-none-eabi-ar cr tinyusb-cdc-lib.a $(OBJ)
+#	cp tinyusb-cdc-lib.a ~/work/xiao/baremetal/baremetal-v2-xiao-nrf52/x42b-fromx41
+#	$(SILENCE)arm-none-eabi-gcc -c -o _build/xiao_nrf52840/obj/examples/device/cdc_XIAO_donor/src/main.o $(LIBCFLAGS) ./src/main.c
+#	#link with archive
+#	arm-none-eabi-gcc -o _build/xiao_nrf52840/cdc_XIAO_donor.elf \
+#	$(LIBMICROBIANLDFLAGS) \
+#       $(EXCLUDED_START) $(EXCLUDED_MAIN) tinyusb-cdc-lib.a \
+#	-Wl,--start-group -lgcc -lm -lnosys -lc -Wl,--end-group
+#	arm-none-eabi-objdump -d _build/xiao_nrf52840/cdc_XIAO_donor.elf > disassembly.txt
diff --git a/examples/device/cdc_XIAO_donor/notes.txt b/examples/device/cdc_XIAO_donor/notes.txt
new file mode 100644
index 000000000..7902303f1
--- /dev/null
+++ b/examples/device/cdc_XIAO_donor/notes.txt
@@ -0,0 +1,20 @@
+First time round
+
+git -C /home/nick/work/xiao/baremetal/baremetal-v2-xaio-nrf52/tinyusb submodule update --init lib/CMSIS_5 hw/mcu/nordic/nrfx
+
+was issued when did "make BOARD=feather_nrf52840_express get-deps" 
+after having tried with my dummy xiao directory
+
+there were no updates made, now try to build and see if warning free unlike dummy xiao
+
+"make BOARD=feather_nrf52840_express all"
+
+fair number of warnings, don't know if they are all the same
+
+
+removed leading @ from a few lines of  ../../rules.mk around line 101 i think 
+
+
+make tinyusb-cdc-lib
+
+to make tinyusb-cdc-lib.a
diff --git a/examples/device/cdc_XIAO_donor/src/main.c b/examples/device/cdc_XIAO_donor/src/main.c
new file mode 100644
index 000000000..72a283185
--- /dev/null
+++ b/examples/device/cdc_XIAO_donor/src/main.c
@@ -0,0 +1,106 @@
+/* 
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2019 Ha Thach (tinyusb.org)
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include <ctype.h>
+
+#include "bsp/board.h"
+#include "tusb.h"
+
+//------------- prototypes -------------//
+static void cdc_task(void);
+
+/*------------- MAIN -------------*/
+int main(void)
+{
+  board_init();
+
+  // init device stack on configured roothub port
+  tud_init(BOARD_TUD_RHPORT);
+
+  while (1)
+  {
+    board_led_write(board_button_read());
+
+    tud_task(); // tinyusb device task
+    cdc_task();
+  }
+
+  return 0;
+}
+
+// echo to either Serial0 or Serial1
+// with Serial0 as all lower case, Serial1 as all upper case
+static void echo_serial_port(uint8_t itf, uint8_t buf[], uint32_t count)
+{
+  uint8_t const case_diff = 'a' - 'A';
+
+
+  for(uint32_t i=0; i<count; i++)
+  {
+    if (itf == 0)
+    {
+      // echo back 1st port as lower case
+      if (isupper(buf[i])) buf[i] += case_diff;
+    }
+    else
+    {
+      // echo back 2nd port as upper case
+      if (islower(buf[i])) buf[i] -= case_diff;
+    }
+
+    tud_cdc_n_write_char(itf, buf[i]);
+  }
+  tud_cdc_n_write_flush(itf);
+}
+
+//--------------------------------------------------------------------+
+// USB CDC
+//--------------------------------------------------------------------+
+static void cdc_task(void)
+{
+  uint8_t itf;
+
+  for (itf = 0; itf < CFG_TUD_CDC; itf++)
+  {
+    // connected() check for DTR bit
+    // Most but not all terminal client set this when making connection
+    // if ( tud_cdc_n_connected(itf) )
+    {
+      if ( tud_cdc_n_available(itf) )
+      {
+        uint8_t buf[64];
+
+        uint32_t count = tud_cdc_n_read(itf, buf, sizeof(buf));
+
+        // echo back to both serial ports
+        echo_serial_port(0, buf, count);
+        echo_serial_port(1, buf, count);
+      }
+    }
+  }
+}
diff --git a/examples/device/cdc_XIAO_donor/src/tusb_config.h b/examples/device/cdc_XIAO_donor/src/tusb_config.h
new file mode 100644
index 000000000..070f08ed1
--- /dev/null
+++ b/examples/device/cdc_XIAO_donor/src/tusb_config.h
@@ -0,0 +1,111 @@
+/*
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2019 Ha Thach (tinyusb.org)
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ */
+
+#ifndef _TUSB_CONFIG_H_
+#define _TUSB_CONFIG_H_
+
+#ifdef __cplusplus
+ extern "C" {
+#endif
+
+//--------------------------------------------------------------------+
+// Board Specific Configuration
+//--------------------------------------------------------------------+
+
+// RHPort number used for device can be defined by board.mk, default to port 0
+#ifndef BOARD_TUD_RHPORT
+#define BOARD_TUD_RHPORT      0
+#endif
+
+// RHPort max operational speed can defined by board.mk
+#ifndef BOARD_TUD_MAX_SPEED
+#define BOARD_TUD_MAX_SPEED   OPT_MODE_DEFAULT_SPEED
+#endif
+
+//--------------------------------------------------------------------
+// COMMON CONFIGURATION
+//--------------------------------------------------------------------
+
+// defined by board.mk
+#ifndef CFG_TUSB_MCU
+#error CFG_TUSB_MCU must be defined
+#endif
+
+#ifndef CFG_TUSB_OS
+#define CFG_TUSB_OS           OPT_OS_NONE
+#endif
+
+#ifndef CFG_TUSB_DEBUG
+#define CFG_TUSB_DEBUG        0
+#endif
+
+// Enable Device stack
+#define CFG_TUD_ENABLED       1
+
+// Default is max speed that hardware controller could support with on-chip PHY
+#define CFG_TUD_MAX_SPEED     BOARD_TUD_MAX_SPEED
+
+/* USB DMA on some MCUs can only access a specific SRAM region with restriction on alignment.
+ * Tinyusb use follows macros to declare transferring memory so that they can be put
+ * into those specific section.
+ * e.g
+ * - CFG_TUSB_MEM SECTION : __attribute__ (( section(".usb_ram") ))
+ * - CFG_TUSB_MEM_ALIGN   : __attribute__ ((aligned(4)))
+ */
+#ifndef CFG_TUSB_MEM_SECTION
+#define CFG_TUSB_MEM_SECTION
+#endif
+
+#ifndef CFG_TUSB_MEM_ALIGN
+#define CFG_TUSB_MEM_ALIGN          __attribute__ ((aligned(4)))
+#endif
+
+//--------------------------------------------------------------------
+// DEVICE CONFIGURATION
+//--------------------------------------------------------------------
+
+#ifndef CFG_TUD_ENDPOINT0_SIZE
+#define CFG_TUD_ENDPOINT0_SIZE    64
+#endif
+
+//------------- CLASS -------------//
+#define CFG_TUD_CDC               2
+#define CFG_TUD_MSC               0
+#define CFG_TUD_HID               0
+#define CFG_TUD_MIDI              0
+#define CFG_TUD_VENDOR            0
+
+// CDC FIFO size of TX and RX
+#define CFG_TUD_CDC_RX_BUFSIZE   (TUD_OPT_HIGH_SPEED ? 512 : 64)
+#define CFG_TUD_CDC_TX_BUFSIZE   (TUD_OPT_HIGH_SPEED ? 512 : 64)
+
+// CDC Endpoint transfer buffer size, more is faster
+#define CFG_TUD_CDC_EP_BUFSIZE   (TUD_OPT_HIGH_SPEED ? 512 : 64)
+
+#ifdef __cplusplus
+ }
+#endif
+
+#endif /* _TUSB_CONFIG_H_ */
diff --git a/examples/device/cdc_XIAO_donor/src/usb_descriptors.c b/examples/device/cdc_XIAO_donor/src/usb_descriptors.c
new file mode 100644
index 000000000..cda1b63b6
--- /dev/null
+++ b/examples/device/cdc_XIAO_donor/src/usb_descriptors.c
@@ -0,0 +1,253 @@
+/* 
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2019 Ha Thach (tinyusb.org)
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ */
+
+#include "tusb.h"
+
+/* A combination of interfaces must have a unique product id, since PC will save device driver after the first plug.
+ * Same VID/PID with different interface e.g MSC (first), then CDC (later) will possibly cause system error on PC.
+ *
+ * Auto ProductID layout's Bitmap:
+ *   [MSB]       MIDI | HID | MSC | CDC          [LSB]
+ */
+#define _PID_MAP(itf, n)  ( (CFG_TUD_##itf) << (n) )
+#define USB_PID           (0x4000 | _PID_MAP(CDC, 0) | _PID_MAP(MSC, 1) | _PID_MAP(HID, 2) | \
+                           _PID_MAP(MIDI, 3) | _PID_MAP(VENDOR, 4) )
+
+#define USB_VID   0xCafe
+#define USB_BCD   0x0200
+
+//--------------------------------------------------------------------+
+// Device Descriptors
+//--------------------------------------------------------------------+
+tusb_desc_device_t const desc_device =
+{
+    .bLength            = sizeof(tusb_desc_device_t),
+    .bDescriptorType    = TUSB_DESC_DEVICE,
+    .bcdUSB             = USB_BCD,
+
+    // Use Interface Association Descriptor (IAD) for CDC
+    // As required by USB Specs IAD's subclass must be common class (2) and protocol must be IAD (1)
+    .bDeviceClass       = TUSB_CLASS_MISC,
+    .bDeviceSubClass    = MISC_SUBCLASS_COMMON,
+    .bDeviceProtocol    = MISC_PROTOCOL_IAD,
+    .bMaxPacketSize0    = CFG_TUD_ENDPOINT0_SIZE,
+
+    .idVendor           = USB_VID,
+    .idProduct          = USB_PID,
+    .bcdDevice          = 0x0100,
+
+    .iManufacturer      = 0x01,
+    .iProduct           = 0x02,
+    .iSerialNumber      = 0x03,
+
+    .bNumConfigurations = 0x01
+};
+
+// Invoked when received GET DEVICE DESCRIPTOR
+// Application return pointer to descriptor
+uint8_t const * tud_descriptor_device_cb(void)
+{
+  return (uint8_t const *) &desc_device;
+}
+
+//--------------------------------------------------------------------+
+// Configuration Descriptor
+//--------------------------------------------------------------------+
+enum
+{
+  ITF_NUM_CDC_0 = 0,
+  ITF_NUM_CDC_0_DATA,
+  ITF_NUM_CDC_1,
+  ITF_NUM_CDC_1_DATA,
+  ITF_NUM_TOTAL
+};
+
+#define CONFIG_TOTAL_LEN    (TUD_CONFIG_DESC_LEN + CFG_TUD_CDC * TUD_CDC_DESC_LEN)
+
+#if CFG_TUSB_MCU == OPT_MCU_LPC175X_6X || CFG_TUSB_MCU == OPT_MCU_LPC177X_8X || CFG_TUSB_MCU == OPT_MCU_LPC40XX
+  // LPC 17xx and 40xx endpoint type (bulk/interrupt/iso) are fixed by its number
+  // 0 control, 1 In, 2 Bulk, 3 Iso, 4 In etc ...
+  #define EPNUM_CDC_0_NOTIF   0x81
+  #define EPNUM_CDC_0_OUT     0x02
+  #define EPNUM_CDC_0_IN      0x82
+
+  #define EPNUM_CDC_1_NOTIF   0x84
+  #define EPNUM_CDC_1_OUT     0x05
+  #define EPNUM_CDC_1_IN      0x85
+
+#elif CFG_TUSB_MCU == OPT_MCU_SAMG || CFG_TUSB_MCU ==  OPT_MCU_SAMX7X
+  // SAMG & SAME70 don't support a same endpoint number with different direction IN and OUT
+  //    e.g EP1 OUT & EP1 IN cannot exist together
+  #define EPNUM_CDC_0_NOTIF   0x81
+  #define EPNUM_CDC_0_OUT     0x02
+  #define EPNUM_CDC_0_IN      0x83
+
+  #define EPNUM_CDC_1_NOTIF   0x84
+  #define EPNUM_CDC_1_OUT     0x05
+  #define EPNUM_CDC_1_IN      0x86
+
+#else
+  #define EPNUM_CDC_0_NOTIF   0x81
+  #define EPNUM_CDC_0_OUT     0x02
+  #define EPNUM_CDC_0_IN      0x82
+
+  #define EPNUM_CDC_1_NOTIF   0x83
+  #define EPNUM_CDC_1_OUT     0x04
+  #define EPNUM_CDC_1_IN      0x84
+#endif
+
+uint8_t const desc_fs_configuration[] =
+{
+  // Config number, interface count, string index, total length, attribute, power in mA
+  TUD_CONFIG_DESCRIPTOR(1, ITF_NUM_TOTAL, 0, CONFIG_TOTAL_LEN, 0x00, 100),
+
+  // 1st CDC: Interface number, string index, EP notification address and size, EP data address (out, in) and size.
+  TUD_CDC_DESCRIPTOR(ITF_NUM_CDC_0, 4, EPNUM_CDC_0_NOTIF, 8, EPNUM_CDC_0_OUT, EPNUM_CDC_0_IN, 64),
+
+  // 2nd CDC: Interface number, string index, EP notification address and size, EP data address (out, in) and size.
+  TUD_CDC_DESCRIPTOR(ITF_NUM_CDC_1, 4, EPNUM_CDC_1_NOTIF, 8, EPNUM_CDC_1_OUT, EPNUM_CDC_1_IN, 64),
+};
+
+#if TUD_OPT_HIGH_SPEED
+// Per USB specs: high speed capable device must report device_qualifier and other_speed_configuration
+
+uint8_t const desc_hs_configuration[] =
+{
+  // Config number, interface count, string index, total length, attribute, power in mA
+  TUD_CONFIG_DESCRIPTOR(1, ITF_NUM_TOTAL, 0, CONFIG_TOTAL_LEN, 0x00, 100),
+
+  // 1st CDC: Interface number, string index, EP notification address and size, EP data address (out, in) and size.
+  TUD_CDC_DESCRIPTOR(ITF_NUM_CDC_0, 4, EPNUM_CDC_0_NOTIF, 8, EPNUM_CDC_0_OUT, EPNUM_CDC_0_IN, 512),
+
+  // 2nd CDC: Interface number, string index, EP notification address and size, EP data address (out, in) and size.
+  TUD_CDC_DESCRIPTOR(ITF_NUM_CDC_1, 4, EPNUM_CDC_1_NOTIF, 8, EPNUM_CDC_1_OUT, EPNUM_CDC_1_IN, 512),
+};
+
+// device qualifier is mostly similar to device descriptor since we don't change configuration based on speed
+tusb_desc_device_qualifier_t const desc_device_qualifier =
+{
+  .bLength            = sizeof(tusb_desc_device_t),
+  .bDescriptorType    = TUSB_DESC_DEVICE,
+  .bcdUSB             = USB_BCD,
+
+  .bDeviceClass       = TUSB_CLASS_MISC,
+  .bDeviceSubClass    = MISC_SUBCLASS_COMMON,
+  .bDeviceProtocol    = MISC_PROTOCOL_IAD,
+
+  .bMaxPacketSize0    = CFG_TUD_ENDPOINT0_SIZE,
+  .bNumConfigurations = 0x01,
+  .bReserved          = 0x00
+};
+
+// Invoked when received GET DEVICE QUALIFIER DESCRIPTOR request
+// Application return pointer to descriptor, whose contents must exist long enough for transfer to complete.
+// device_qualifier descriptor describes information about a high-speed capable device that would
+// change if the device were operating at the other speed. If not highspeed capable stall this request.
+uint8_t const* tud_descriptor_device_qualifier_cb(void)
+{
+  return (uint8_t const*) &desc_device_qualifier;
+}
+
+// Invoked when received GET OTHER SEED CONFIGURATION DESCRIPTOR request
+// Application return pointer to descriptor, whose contents must exist long enough for transfer to complete
+// Configuration descriptor in the other speed e.g if high speed then this is for full speed and vice versa
+uint8_t const* tud_descriptor_other_speed_configuration_cb(uint8_t index)
+{
+  (void) index; // for multiple configurations
+
+  // if link speed is high return fullspeed config, and vice versa
+  return (tud_speed_get() == TUSB_SPEED_HIGH) ?  desc_fs_configuration : desc_hs_configuration;
+}
+
+#endif // highspeed
+
+// Invoked when received GET CONFIGURATION DESCRIPTOR
+// Application return pointer to descriptor
+// Descriptor contents must exist long enough for transfer to complete
+uint8_t const * tud_descriptor_configuration_cb(uint8_t index)
+{
+  (void) index; // for multiple configurations
+
+#if TUD_OPT_HIGH_SPEED
+  // Although we are highspeed, host may be fullspeed.
+  return (tud_speed_get() == TUSB_SPEED_HIGH) ?  desc_hs_configuration : desc_fs_configuration;
+#else
+  return desc_fs_configuration;
+#endif
+}
+
+//--------------------------------------------------------------------+
+// String Descriptors
+//--------------------------------------------------------------------+
+
+// array of pointer to string descriptors
+char const* string_desc_arr [] =
+{
+  (const char[]) { 0x09, 0x04 }, // 0: is supported language is English (0x0409)
+  "TinyUSB",                     // 1: Manufacturer
+  "TinyUSB Device",              // 2: Product
+  "123456",                      // 3: Serials, should use chip ID
+  "TinyUSB CDC",                 // 4: CDC Interface
+};
+
+static uint16_t _desc_str[32];
+
+// Invoked when received GET STRING DESCRIPTOR request
+// Application return pointer to descriptor, whose contents must exist long enough for transfer to complete
+uint16_t const* tud_descriptor_string_cb(uint8_t index, uint16_t langid)
+{
+  (void) langid;
+
+  uint8_t chr_count;
+
+  if ( index == 0)
+  {
+    memcpy(&_desc_str[1], string_desc_arr[0], 2);
+    chr_count = 1;
+  }else
+  {
+    // Note: the 0xEE index string is a Microsoft OS 1.0 Descriptors.
+    // https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/microsoft-defined-usb-descriptors
+
+    if ( !(index < sizeof(string_desc_arr)/sizeof(string_desc_arr[0])) ) return NULL;
+
+    const char* str = string_desc_arr[index];
+
+    // Cap at max char
+    chr_count = (uint8_t) strlen(str);
+    if ( chr_count > 31 ) chr_count = 31;
+
+    // Convert ASCII string into UTF-16
+    for(uint8_t i=0; i<chr_count; i++)
+    {
+      _desc_str[1+i] = str[i];
+    }
+  }
+
+  // first byte is length (including header), second byte is string type
+  _desc_str[0] = (uint16_t) ((TUSB_DESC_STRING << 8 ) | (2*chr_count + 2));
+
+  return _desc_str;
+}
diff --git a/hw/bsp/nrf/family.c b/hw/bsp/nrf/family.c
index a07332d4c..7b5933b31 100644
--- a/hw/bsp/nrf/family.c
+++ b/hw/bsp/nrf/family.c
@@ -37,6 +37,8 @@
 #include "nrf_soc.h"
 #endif
 
+#include "nrf_rtc.h" //NJH is this needed now leaving more in
+
 //--------------------------------------------------------------------+
 // Forward USB interrupt events to TinyUSB IRQ Handler
 //--------------------------------------------------------------------+
@@ -49,7 +51,12 @@ void USBD_IRQHandler(void)
 /* MACRO TYPEDEF CONSTANT ENUM
  *------------------------------------------------------------------*/
 
-static nrfx_uarte_t _uart_id = NRFX_UARTE_INSTANCE(0);
+//NJHstatic nrfx_uarte_t _uart_id = NRFX_UARTE_INSTANCE(0);
+//NJH start by moving clashing hw uart out of the way
+//NJH remember to move pins somewhere unused
+//NJH would suggest need to look at IRQ handler move from serial0 to serial1
+static nrfx_uarte_t _uart_id = NRFX_UARTE_INSTANCE(1);
+//static nrfx_uarte_t _uart_id = NRFX_UARTE_INSTANCE(0);
 
 // tinyusb function that handles power event (detected, ready, removed)
 // We must call it within SD's SOC event handler, or set it as power event handler if SD is not enabled.
@@ -62,6 +69,98 @@ TU_ATTR_UNUSED static void power_event_handler(nrfx_power_usb_evt_t event)
   tusb_hal_nrf_power_event((uint32_t) event);
 }
 
+//NJHvoid board_init(void) leaving board_init() in this time
+//NJH cause link error if try to compile tinyusb demo now
+//NJH this is meant for tinyusb-cdc-lib.a only
+void usb_init(void)
+{
+// FIXME: bootloader enables interrupt on COMPARE[0], which we don't handle
+  // Disable it here to avoid getting stuck when OVERFLOW irq is triggered
+  nrf_rtc_event_disable(NRF_RTC1, NRF_RTC_INT_COMPARE0_MASK);
+  nrf_rtc_int_disable(NRF_RTC1, NRF_RTC_INT_COMPARE0_MASK);
+//BECAUSE the SOURCE for the SEEDSTUDIO bootload is not available I'm going
+//on rumour, the mbed version of the arduino mentions this
+
+  // stop LF clock just in case we jump from application without reset
+//NJH  NRF_CLOCK->TASKS_LFCLKSTOP = 1UL;
+
+  // Use Internal OSC to compatible with all boards
+//NJH  NRF_CLOCK->LFCLKSRC = CLOCK_LFCLKSRC_SRC_RC;
+//NJH  NRF_CLOCK->TASKS_LFCLKSTART = 1UL;
+
+  // LED
+//NJH  nrf_gpio_cfg_output(LED_PIN);
+//NJH  board_led_write(false);
+
+  // Button
+//NJH  nrf_gpio_cfg_input(BUTTON_PIN, NRF_GPIO_PIN_PULLUP);
+
+  // 1ms tick timer
+//NJH  SysTick_Config(SystemCoreClock/1000);
+
+//NJH tidy up UART later
+  // UART
+  nrfx_uarte_config_t uart_cfg =
+  {
+//NJH    .pseltxd   = UART_TX_PIN,
+//NJH    .pselrxd   = UART_RX_PIN,
+//NJH pick 1,4 and  1,5 as unallocated on xiao
+    .pseltxd   = _PINNUM(1, 4),
+    .pselrxd   = _PINNUM(1, 5),
+    .pselcts   = NRF_UARTE_PSEL_DISCONNECTED,
+    .pselrts   = NRF_UARTE_PSEL_DISCONNECTED,
+    .p_context = NULL,
+    .baudrate  = NRF_UARTE_BAUDRATE_115200, // CFG_BOARD_UART_BAUDRATE
+    .interrupt_priority = 7,
+    .hal_cfg = {
+      .hwfc      = NRF_UARTE_HWFC_DISABLED,
+      .parity    = NRF_UARTE_PARITY_EXCLUDED,
+    }
+  };
+
+  nrfx_uarte_init(&_uart_id, &uart_cfg, NULL); //uart_handler);
+  //------------- USB -------------//
+  uint32_t usb_reg;
+#if CFG_TUD_ENABLED
+  // Priorities 0, 1, 4 (nRF52) are reserved for SoftDevice
+  // 2 is highest for application
+//  NVIC_SetPriority(USBD_IRQn, 2);
+  NVIC_SetPriority(USBD_IRQn, 0);
+  // USB power may already be ready at this time -> no event generated
+  // We need to invoke the handler based on the status initially
+
+/*
+#ifdef SOFTDEVICE_PRESENT
+  uint8_t sd_en = false;
+  sd_softdevice_is_enabled(&sd_en);
+
+  if ( sd_en ) {
+    sd_power_usbdetected_enable(true);
+    sd_power_usbpwrrdy_enable(true);
+    sd_power_usbremoved_enable(true);
+
+    sd_power_usbregstatus_get(&usb_reg);
+  }else
+#endif
+*/
+  {
+    // Power module init
+    const nrfx_power_config_t pwr_cfg = { 0 };
+    nrfx_power_init(&pwr_cfg);
+    // Register tusb function as USB power handler
+    // cause cast-function-type warning
+    const nrfx_power_usbevt_config_t config = { .handler = power_event_handler };
+    nrfx_power_usbevt_init(&config);
+
+    nrfx_power_usbevt_enable();
+    usb_reg = NRF_POWER->USBREGSTATUS;
+  }
+
+  if ( usb_reg & POWER_USBREGSTATUS_VBUSDETECT_Msk ) tusb_hal_nrf_power_event(NRFX_POWER_USB_EVT_DETECTED);
+  if ( usb_reg & POWER_USBREGSTATUS_OUTPUTRDY_Msk  ) tusb_hal_nrf_power_event(NRFX_POWER_USB_EVT_READY);
+#endif
+}
+
 void board_init(void)
 {
   // stop LF clock just in case we jump from application without reset
diff --git a/hw/mcu/nordic/nrfx_config.h b/hw/mcu/nordic/nrfx_config.h
index 6a974ba70..72440ff29 100644
--- a/hw/mcu/nordic/nrfx_config.h
+++ b/hw/mcu/nordic/nrfx_config.h
@@ -7,9 +7,11 @@
 #define NRFX_CLOCK_ENABLED   0
 
 #define NRFX_UARTE_ENABLED   1
-#define NRFX_UARTE0_ENABLED  1
+//NJH#define NRFX_UARTE0_ENABLED  1
+#define NRFX_UARTE0_ENABLED  0
 
-#define NRFX_UARTE1_ENABLED  0
+//NJH#define NRFX_UARTE1_ENABLED  0
+#define NRFX_UARTE1_ENABLED  1
 #define NRFX_UARTE2_ENABLED  0
 #define NRFX_UARTE3_ENABLED  0
 
