diff --git a/examples/rules.mk b/examples/rules.mk
index c3134056a..0cf882290 100644
--- a/examples/rules.mk
+++ b/examples/rules.mk
@@ -98,15 +98,15 @@ endif
 
 $(BUILD)/$(PROJECT).elf: $(OBJ)
 	@echo LINK $@
-	@$(CC) -o $@ $(LDFLAGS) $^ -Wl,--start-group $(LIBS) -Wl,--end-group
+	$(CC) -o $@ $(LDFLAGS) $^ -Wl,--start-group $(LIBS) -Wl,--end-group
 
 $(BUILD)/$(PROJECT).bin: $(BUILD)/$(PROJECT).elf
 	@echo CREATE $@
-	@$(OBJCOPY) -O binary $^ $@
+	$(OBJCOPY) -O binary $^ $@
 
 $(BUILD)/$(PROJECT).hex: $(BUILD)/$(PROJECT).elf
 	@echo CREATE $@
-	@$(OBJCOPY) -O ihex $^ $@
+	$(OBJCOPY) -O ihex $^ $@
 
 # UF2 generation, iMXRT need to strip to text only before conversion
 ifeq ($(FAMILY),imxrt)
@@ -128,19 +128,19 @@ copy-artifact: $(BUILD)/$(PROJECT).bin $(BUILD)/$(PROJECT).hex $(BUILD)/$(PROJEC
 vpath %.c . $(TOP)
 $(BUILD)/obj/%.o: %.c
 	@echo CC $(notdir $@)
-	@$(CC) $(CFLAGS) -c -MD -o $@ $<
+	$(CC) $(CFLAGS) -c -MD -o $@ $<
 
 # ASM sources lower case .s
 vpath %.s . $(TOP)
 $(BUILD)/obj/%_asm.o: %.s
 	@echo AS $(notdir $@)
-	@$(CC) -x assembler-with-cpp $(ASFLAGS) -c -o $@ $<
+	$(CC) -x assembler-with-cpp $(ASFLAGS) -c -o $@ $<
 
 # ASM sources upper case .S
 vpath %.S . $(TOP)
 $(BUILD)/obj/%_asm.o: %.S
 	@echo AS $(notdir $@)
-	@$(CC) -x assembler-with-cpp $(ASFLAGS) -c -o $@ $<
+	$(CC) -x assembler-with-cpp $(ASFLAGS) -c -o $@ $<
 
 endif
 
@@ -242,4 +242,4 @@ copy-artifact: $(BIN)
 # Print out the value of a make variable.
 # https://stackoverflow.com/questions/16467718/how-to-print-out-a-variable-in-makefile
 print-%:
-	@echo $* = $($*)
\ No newline at end of file
+	@echo $* = $($*)
diff --git a/hw/bsp/nrf/boards/xiao_nrf52840/board.h b/hw/bsp/nrf/boards/xiao_nrf52840/board.h
new file mode 100644
index 000000000..c35e33a88
--- /dev/null
+++ b/hw/bsp/nrf/boards/xiao_nrf52840/board.h
@@ -0,0 +1,52 @@
+/* 
+ * The MIT License (MIT)
+ *
+ * Copyright (c) 2020, Ha Thach (tinyusb.org)
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * This file is part of the TinyUSB stack.
+ */
+
+#ifndef BOARD_H_
+#define BOARD_H_
+
+#ifdef __cplusplus
+ extern "C" {
+#endif
+
+#define _PINNUM(port, pin)    ((port)*32 + (pin))
+
+// LED
+#define LED_PIN         _PINNUM(0, 26)
+#define LED_STATE_ON    0
+
+// Button
+#define BUTTON_PIN      _PINNUM(0, 3)
+#define BUTTON_STATE_ACTIVE   0
+
+// UART
+#define UART_RX_PIN     _PINNUM(1, 12)
+#define UART_TX_PIN     _PINNUM(1, 11)
+
+#ifdef __cplusplus
+ }
+#endif
+
+#endif /* BOARD_H_ */
diff --git a/hw/bsp/nrf/boards/xiao_nrf52840/board.mk b/hw/bsp/nrf/boards/xiao_nrf52840/board.mk
new file mode 100644
index 000000000..d1f93196d
--- /dev/null
+++ b/hw/bsp/nrf/boards/xiao_nrf52840/board.mk
@@ -0,0 +1,13 @@
+MCU_VARIANT = nrf52840
+CFLAGS += -DNRF52840_XXAA
+
+#unsure about --sd-req 0xFFFE so leaving out, probably means no SOFTDEVICE explicitly
+$(BUILD)/$(PROJECT).zip: $(BUILD)/$(PROJECT).hex
+#	adafruit-nrfutil dfu genpkg --dev-type 0x0052 --sd-req 0xFFFE --application $^ $@
+	adafruit-nrfutil dfu genpkg --dev-type 0x0052 --application $^ $@
+
+# flash using adafruit-nrfutil dfu
+flash: $(BUILD)/$(PROJECT).zip
+	@:$(call check_defined, SERIAL, example: SERIAL=/dev/ttyACM0)
+#	adafruit-nrfutil --verbose dfu serial --package $^ -p $(SERIAL) -b 115200 --singlebank --touch 1200
+	adafruit-nrfutil --verbose dfu serial --package $^ -p $(SERIAL) -b 115200 --singlebank
diff --git a/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld b/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld
new file mode 100644
index 000000000..4e81a0527
--- /dev/null
+++ b/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld
@@ -0,0 +1,41 @@
+/* Linker script to configure memory regions. */
+
+SEARCH_DIR(.)
+GROUP(-lgcc -lc -lnosys)
+
+MEMORY
+{
+/*hack while testing if CDC can compile nicely on my madeup XIAO update FLASH and RAM*/
+
+FLASH   (rx)  : ORIGIN = 0x27000,      LENGTH = 0xed000 - 0x27000
+
+  /* SRAM required by S132 depend on
+   * - Attribute Table Size
+   * - Vendor UUID count
+   * - Max ATT MTU
+   * - Concurrent connection peripheral + central + secure links
+   * - Event Len, HVN queue, Write CMD queue
+   */ 
+/*  RAM (rwx) :  ORIGIN = 0x20003400, LENGTH = 0x20040000 - 0x20003400*/
+  RAM (rwx) :  ORIGIN = 0x20006000, LENGTH = 228K /*probably could be 232K*/
+}
+
+SECTIONS
+{
+  . = ALIGN(4);
+  .svc_data :
+  {
+    PROVIDE(__start_svc_data = .);
+    KEEP(*(.svc_data))
+    PROVIDE(__stop_svc_data = .);
+  } > RAM
+  
+  .fs_data :
+  {
+    PROVIDE(__start_fs_data = .);
+    KEEP(*(.fs_data))
+    PROVIDE(__stop_fs_data = .);
+  } > RAM
+} INSERT AFTER .data;
+
+INCLUDE "nrf52_common.ld"
diff --git a/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld.none-bodged-original b/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld.none-bodged-original
new file mode 100644
index 000000000..5314a4e93
--- /dev/null
+++ b/hw/bsp/nrf/boards/xiao_nrf52840/nrf52840_s140_v6.ld.none-bodged-original
@@ -0,0 +1,38 @@
+/* Linker script to configure memory regions. */
+
+SEARCH_DIR(.)
+GROUP(-lgcc -lc -lnosys)
+
+MEMORY
+{
+  FLASH (rx)     : ORIGIN = 0x26000, LENGTH = 0xED000 - 0x26000
+
+  /* SRAM required by S132 depend on
+   * - Attribute Table Size
+   * - Vendor UUID count
+   * - Max ATT MTU
+   * - Concurrent connection peripheral + central + secure links
+   * - Event Len, HVN queue, Write CMD queue
+   */ 
+  RAM (rwx) :  ORIGIN = 0x20003400, LENGTH = 0x20040000 - 0x20003400
+}
+
+SECTIONS
+{
+  . = ALIGN(4);
+  .svc_data :
+  {
+    PROVIDE(__start_svc_data = .);
+    KEEP(*(.svc_data))
+    PROVIDE(__stop_svc_data = .);
+  } > RAM
+  
+  .fs_data :
+  {
+    PROVIDE(__start_fs_data = .);
+    KEEP(*(.fs_data))
+    PROVIDE(__stop_fs_data = .);
+  } > RAM
+} INSERT AFTER .data;
+
+INCLUDE "nrf52_common.ld"
